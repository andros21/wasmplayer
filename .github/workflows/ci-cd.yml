---
name: ci/cd

"on":
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - LICENSE
      - README.md
      - fly.toml
      - '.github/workflows/*'
      - '.github/dependabot.yaml'
  pull_request:
    branches:
      - master
    paths-ignore:
      - LICENSE
      - README.md
      - fly.toml
      - '.github/workflows/*'
      - '.github/dependabot.yaml'

jobs:
  build:
    name: build wasmplayer
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: checkout project
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: rust stable latest
        id: rust
        run: |
          latest="$(curl -sL https://api.github.com/repos/rust-lang/rust/releases/latest | jq -r .tag_name)"
          echo "rust stable latest: ${latest}"
          echo "stable_latest=${latest}" >> "$GITHUB_OUTPUT"
      - name: check cache
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84
        id: cache
        with:
          path: |
            ~/.cargo/
            ~/.rustup/
            target/
          key: ${{ runner.os }}-rust-${{ steps.rust.outputs.stable_latest }}-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('Cargo.lock') }}
      - name: cargo fmt
        run: |
          cargo fmt -- --check --verbose
      - name: cargo clippy
        run: |
          cargo clippy --locked --workspace
      - name: install wasm-pack
        uses: taiki-e/install-action@11dea51b35bc2bfa42820716c6cabb14fd4c3266
        with:
          tool: wasm-pack
          checksum: true
      - name: build wasmplayer
        run: |
          wasm-pack build --release --target web
      - name: upload wasmplayer
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        with:
          name: wasmplayer
          path: pkg/
          if-no-files-found: error
          retention-days: 1
  deploy:
    name: deploy wasmplayer
    needs: build
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: checkout project
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: download wasmplayer
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a
        with:
          name: wasmplayer
          path: pkg/
      - name: prepare wasmplayer
        run: |
          set -x
          mkdir -p wasmplayer/pkg/
          mv pkg/wasmplayer.js \
             pkg/wasmplayer_bg.wasm \
             wasmplayer/pkg/
          mv assets/ \
             index.html \
             wasmplayer/
      - name: publish to gh-pages
        uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: wasmplayer/
